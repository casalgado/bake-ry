rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isSystemAdmin() {
      return isAuthenticated() && request.auth.token.role == 'system_admin';
    }
    
    function isBakeryAdmin(bakeryId) {
      return isAuthenticated() && 
             request.auth.token.role == 'admin' && 
             request.auth.token.bakeryId == bakeryId;
    }
    
    function isBakeryStaff(bakeryId) {
      return isAuthenticated() && 
             request.auth.token.bakeryId == bakeryId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && 
        (isSystemAdmin() || request.auth.uid == userId || 
         isBakeryStaff(resource.data.bakeryId));
      allow create: if isSystemAdmin() || 
        (isAuthenticated() && isBakeryAdmin(request.resource.data.bakeryId));
      allow update: if isSystemAdmin() || 
        (isAuthenticated() && request.auth.uid == userId);
      allow delete: if isSystemAdmin();
    }

    // Bakeries collection
    match /bakeries/{bakeryId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isSystemAdmin();
      
      // Nested collections within bakeries
      match /products/{productId} {
        allow read: if isAuthenticated() && isBakeryStaff(bakeryId);
        allow write: if isAuthenticated() && 
          (isSystemAdmin() || isBakeryAdmin(bakeryId));
      }
      
      match /orders/{orderId} {
        allow read: if isAuthenticated() && isBakeryStaff(bakeryId);
        allow create: if isAuthenticated();
        allow update, delete: if isAuthenticated() && 
          (isSystemAdmin() || isBakeryAdmin(bakeryId));
      }
      
      match /ingredients/{ingredientId} {
        allow read: if isAuthenticated() && isBakeryStaff(bakeryId);
        allow write: if isAuthenticated() && 
          (isSystemAdmin() || isBakeryAdmin(bakeryId));
      }
      
      match /recipes/{recipeId} {
        allow read: if isAuthenticated() && isBakeryStaff(bakeryId);
        allow write: if isAuthenticated() && 
          (isSystemAdmin() || isBakeryAdmin(bakeryId));
      }
    }
  }
}