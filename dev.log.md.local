# 2024-10-20

- Added user roles and permissions
- Added user controller
- Added auth controller
- created first user

next steps is being able to create bakeries and assign users to them
also create products and orders

then i plan to set up permissions for each role

# 2024-10-21

- tried to move to import syntax and rolled back because it was causing issues with jest
- wrote tests for bakery model and service
- moved custom token to its own file and commented out the call to it in firebase.js (for testing purposes)

next steps:

- write full tests for bakery service
- create products and orders
- write tests for products and orders

# 2024-10-22

- database relationships
  graph TD
  subgraph Firestore Collections
  bakeries[/bakeries/]
  products[/products/]
  orders[/orders/]
  ingredients[/ingredients/]
  recipes[/recipes/]
  orderItems[/orderItems/]
  end

      bakeries --> |contains| products
      bakeries --> |contains| orders
      bakeries --> |contains| ingredients
      products --> |references| recipes
      orders --> |contains| orderItems
      recipes --> |references| ingredients

# 2024-10-24

- frontend working
- bakery routes working

next steps:

- create mock users and bakeries from frontend
- manually test bakery access
- write tests for bakery access (from frontend?)
- test product routes

# 2024-10-27

- lot's of error with undefined 'id' when it should have been 'bakeryId' in bakery routes, both in front and back.
- make sure params match variables in code when implementing other resources.
- I think in others we can just use 'id' instead of 'productId' etc.

# 2024-10-29

- when recipe is created ingredient ids are added to ingedient docs
- when recipe is updated (add/remove ingredients) the ingredient docs are updated to reflect the change
- this is done in recipeService.updateRecipe

- when ingredient cost is updated, the cost is updated in the recipe docs for the ingredients that are used in the recipe

- recipe versioning is working


# 2024-11-16

- met with clients, conducting interviews. 
- working on UX and models

# 2024-11-28

- ok, the workflow is like this.
- in the create order, if payment method is regalo, the order is marked as complimentary.
- in orders show, if order is complimentary, the show table shows a gift.
  - it first shows asks if (is complimentary) beforer asking for ispaid status. 
  - if order is complimentary, the payment satus is not editable, tooltip should not show and cannot be changed. 
- when patching payment method, two fields are patched, if toggle result is regalo for the payment method, then the isComplimentary status is patched as true.
- if toggle result is not regalo, then the isComplimentary status is patched as false.

